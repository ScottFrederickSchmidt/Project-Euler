# Project Euler 29: https://projecteuler.net/problem=29
# Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
# 2^2=4, 2^3=8, 2^4=16, 2^5=32
#3^2=9, 3^3=27, 3^4=81, 3^5=243
#4^2=16, 4^3=64, 4^4=256, 4^5=1024
#5^2=2^5, 5^3=125, 5^4=625, 5^5=3125
#3 by 3=9; 4 by 4=15. 99 by 99=9801?

#If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:
#4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
#How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

# This was one of the easier problems:
import time
start=time.time()

sett=set() # Distinct terms so use a set (will not count duplicates)

for a in range(2, 101): 
    for b in range(2, 101):
        sett.add(a**b) 

num_terms=len(sett) #count how many terms
print("Solution:", num_terms, time.time()-start, "seconds") # Solution: 9183 0.01561 seconds
