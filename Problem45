# Project Euler 45: https://projecteuler.net/problem=45
# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
# Triangle Tn=n(n+1)/2 1, 3, 6, 10, 15, ...
# Pentagonal Pn=n(3n−1)/2 1, 5, 12, 22, 35, ...
# Hexagonal Hn=n(2n−1) 1, 6, 15, 28, 45, ...
#It can be verified that T285 = P165 = H143 = 40755.
#Find the next triangle number that is also pentagonal and hexagonal.


# Gets correct solution in about a second. 
# This problem was not neccessarily difficult once someone uses the pentagon and hectagon formula.
import time
start=time.time()

hect=[]
tri=[]
LIMIT=1_000_000

for n in range(5, LIMIT):
    h = n*(2*n-1)
    hect.append(h)
    
for n in range(5, LIMIT):
    t = n*(n+1)/2
    t=int(t)
    tri.append(t)
print("max triangle num:", max(tri))
    
def pent(n):
    if (1+(24 * n+1) **.5) % 6 == 0:
        return True
    return False

for h in hect: # for each hectagon number,
    if pent(h): # check if also pentagon number,
        t=h
        print(h)  # 1, 40755, 1533776805, 57722156241751
        if t in tri: # check if also a tri number
            print("answer:", t)
print("Done.", t, time.time()-start, "seconds") # Done. 1533776805 1.441seconds
