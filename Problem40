# Project Euler 40: https://projecteuler.net/problem=40
# An irrational decimal fraction is created by concatenating the positive integers:
# 0.123456789101112131415161718192021...
# It can be seen that the 12th digit of the fractional part is 1.
# If dn represents the nth digit of the fractional part, find the value of the following expression.
# d1 × d10 × d100 × d1000 × d10000 × d100000 × d1000000

# Gets corect solution in almost 0 seconds.
import time
start=time.time()

d=''  # must be a string to get the "nth" index later on... 
LIMIT=200_000
for i in range(1, LIMIT): #185_186
    d=d+str(i)
d1=int(d[0]) # gets first index
d2=int(d[9]) # gets index 10
d3=int(d[99]) # always gets index-1
d4=int(d[999])
d5=int(d[9999])
d6=int(d[99999])
d7=int(d[999_999])

solution=d1*d2*d3*d4*d5*d6*d7
print("Done", solution, time.time()-start, "seconds") # Done 210 0.0823 seconds
